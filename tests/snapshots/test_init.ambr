# serializer version: 1
# name: test_dismissal_from_switch[aux_double_press][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[aux_double_press_individual_leds_configured][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[aux_double_press_no_notification][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[aux_double_press_with_block_dismissal_script][service_calls]
  list([
    tuple(
      'script',
      'block_dismissal',
      dict({
        'device_id': <ANY>,
        'dismissed': True,
        'notification': 'doors_open',
        'switch_id': 'light.kitchen',
      }),
    ),
  ])
# ---
# name: test_dismissal_from_switch[aux_double_press_with_block_dismissal_script][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_dismissal_from_switch[aux_double_press_with_block_next_script][service_calls]
  list([
    tuple(
      'script',
      'block_next',
      dict({
        'device_id': <ANY>,
        'dismissed': True,
        'notification': 'doors_open',
        'switch_id': 'light.kitchen',
      }),
    ),
  ])
# ---
# name: test_dismissal_from_switch[aux_double_press_with_service_override][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[aux_double_with_local_protection_and_2x_tap_and_block_dismissal_script][service_calls]
  list([
    tuple(
      'script',
      'block_dismissal',
      dict({
        'device_id': <ANY>,
        'dismissed': True,
        'notification': 'doors_open',
        'switch_id': 'light.kitchen',
      }),
    ),
  ])
# ---
# name: test_dismissal_from_switch[aux_double_with_local_protection_and_2x_tap_disabled][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[aux_double_with_local_protection_and_2x_tap_dismisses][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[aux_double_with_local_protection_and_2x_tap_dismisses][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_dismissal_from_switch[config_double_press][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[config_double_press_individual_leds_configured][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[config_double_press_no_notification][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[config_double_press_with_block_dismissal_script][service_calls]
  list([
    tuple(
      'script',
      'block_dismissal',
      dict({
        'device_id': <ANY>,
        'dismissed': True,
        'notification': 'doors_open',
        'switch_id': 'light.kitchen',
      }),
    ),
  ])
# ---
# name: test_dismissal_from_switch[config_double_press_with_block_dismissal_script][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_dismissal_from_switch[config_double_press_with_block_next_script][service_calls]
  list([
    tuple(
      'script',
      'block_next',
      dict({
        'device_id': <ANY>,
        'dismissed': True,
        'notification': 'doors_open',
        'switch_id': 'light.kitchen',
      }),
    ),
  ])
# ---
# name: test_dismissal_from_switch[config_double_press_with_service_override][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[config_double_with_local_protection_and_2x_tap_and_block_dismissal_script][service_calls]
  list([
    tuple(
      'script',
      'block_dismissal',
      dict({
        'device_id': <ANY>,
        'dismissed': True,
        'notification': 'doors_open',
        'switch_id': 'light.kitchen',
      }),
    ),
  ])
# ---
# name: test_dismissal_from_switch[config_double_with_local_protection_and_2x_tap_disabled][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[config_double_with_local_protection_and_2x_tap_dismisses][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[config_double_with_local_protection_and_2x_tap_dismisses][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_dismissal_from_switch[duration_1_expired][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[duration_7_expired_with_invalid_setup][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[duration_expired_all][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[duration_expired_all_block_dismissal_ignored][service_calls]
  list([
    tuple(
      'script',
      'block_dismissal',
      dict({
        'device_id': <ANY>,
        'dismissed': False,
        'notification': 'doors_open',
        'switch_id': 'light.kitchen',
      }),
    ),
  ])
# ---
# name: test_dismissal_from_switch[duration_expired_all_individual][service_calls]
  list([
  ])
# ---
# name: test_dismissal_from_switch[duration_expired_all_with_2x_tap_disabled][service_calls]
  list([
  ])
# ---
# name: test_standard_setup[device]
  DeviceRegistryEntrySnapshot({
    'area_id': None,
    'config_entries': <ANY>,
    'config_entries_subentries': <ANY>,
    'configuration_url': None,
    'connections': set({
    }),
    'disabled_by': None,
    'entry_type': None,
    'hw_version': None,
    'id': <ANY>,
    'identifiers': set({
      tuple(
        'zha',
        'mock-ieee:kitchen',
      ),
    }),
    'is_new': False,
    'labels': set({
    }),
    'manufacturer': 'Inovelli',
    'model': 'VZM31-SN',
    'model_id': None,
    'name': 'Kitchen',
    'name_by_user': None,
    'primary_config_entry': <ANY>,
    'serial_number': None,
    'sw_version': None,
    'via_device_id': None,
  })
# ---
# name: test_toggle_notification_with_actions[block_activation][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_activation][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_activation][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_activation][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_activation][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_activation][service_calls]
  list([
    tuple(
      'script',
      'block_activation',
      dict({
        'notification': 'doors_open',
      }),
    ),
  ])
# ---
# name: test_toggle_notification_with_actions[block_activation][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notification_with_actions[block_activation][zha_cluster_commands]
  list([
  ])
# ---
# name: test_toggle_notification_with_actions[block_next][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_next][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_next][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_next][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_next][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[block_next][service_calls]
  list([
    tuple(
      'script',
      'block_next',
      dict({
        'device_id': None,
        'dismissed': False,
        'notification': 'doors_open',
        'switch_id': None,
      }),
    ),
  ])
# ---
# name: test_toggle_notification_with_actions[block_next][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notification_with_actions[block_next][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 3,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notification_with_actions[color_override][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notification_with_actions[color_override][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cyan',
  })
# ---
# name: test_toggle_notification_with_actions[color_override][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[color_override][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solid',
  })
# ---
# name: test_toggle_notification_with_actions[color_override][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notification_with_actions[color_override][service_calls]
  list([
    tuple(
      'script',
      'color_override',
      dict({
        'notification': 'doors_open',
      }),
    ),
  ])
# ---
# name: test_toggle_notification_with_actions[color_override][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notification_with_actions[color_override][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 130,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notification_with_actions[single_led_change][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'individual': list([
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notification_with_actions[single_led_change][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
      'individual': list([
        'green',
        'blue',
        'blue',
        'blue',
        'blue',
        'blue',
        'blue',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_toggle_notification_with_actions[single_led_change][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'individual': list([
        None,
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notification_with_actions[single_led_change][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
      'individual': list([
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solid',
  })
# ---
# name: test_toggle_notification_with_actions[single_led_change][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notification_with_actions[single_led_change][service_calls]
  list([
    tuple(
      'script',
      'color_from_input',
      dict({
        'notification': 'windows_open',
      }),
    ),
    tuple(
      'script',
      'color_from_input',
      dict({
        'notification': 'doors_open',
      }),
    ),
  ])
# ---
# name: test_toggle_notification_with_actions[single_led_change][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notification_with_actions[single_led_change][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 45,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'notification': 'doors_open',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_10s_duration_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 10,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'notification': 'doors_open',
      }),
      'event_type': 'lampie.dismissed',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_dismissed][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'notification': 'doors_open',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'notification': 'doors_open',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][service_calls]
  list([
    tuple(
      'script',
      'block_dismissal',
      dict({
        'device_id': None,
        'dismissed': False,
        'notification': 'doors_open',
        'switch_id': None,
      }),
    ),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_expired_not_blocked_via_end_action][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': <ANY>,
      'expires_at': HAFakeDatetime(2025, 5, 20, 3, 56, 33, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config_override': None,
    'notification_on': True,
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '301',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'expires_at': '2025-05-20T03:56:33.003245-07:00',
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
      'started_at': '2025-05-20T03:51:32.003245-07:00',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': 301,
        'effect': <Effect.OPEN_CLOSE: 6>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': 'doors_open',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_duration_unexpired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': <ANY>,
      'expires_at': HAFakeDatetime(2025, 5, 20, 3, 56, 33, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config_override': None,
    'notification_on': True,
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '301',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'expires_at': '2025-05-20T03:56:33.003245-07:00',
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
      'started_at': '2025-05-20T03:51:32.003245-07:00',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': 301,
        'effect': <Effect.OPEN_CLOSE: 6>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': 'doors_open',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_reactivated_and_unexpired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_5m1s_turned_off][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'notification': 'doors_open',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': <ANY>,
      'expires_at': HAFakeDatetime(2025, 5, 20, 4, 1, 33, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config_override': None,
    'notification_on': True,
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'individual': list([
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
      'individual': list([
        'red',
        'blue',
        'white',
        'red',
        'blue',
        'white',
        0,
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'individual': list([
        None,
        0,
        601.0,
        None,
        0,
        601.0,
        None,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
      'individual': list([
        'solid',
        'clear',
        'solid',
        'solid',
        'clear',
        'solid',
        'solid',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'expires_at': '2025-05-20T04:01:33.003245-07:00',
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
      'started_at': '2025-05-20T03:51:32.003245-07:00',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': None,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.BLUE: 170>,
        'duration': 0,
        'effect': <Effect.CLEAR: 255>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.WHITE: 255>,
        'duration': 601.0,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': None,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.BLUE: 170>,
        'duration': 0,
        'effect': <Effect.CLEAR: 255>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.WHITE: 255>,
        'duration': 601.0,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': 0,
        'duration': None,
        'effect': <Effect.SOLID: 1>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': 'doors_open',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_mixed_specific_durations_partially_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'notification': 'doors_open',
      }),
      'event_type': 'lampie.dismissed',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][swtich_info:light.entryway]
  dict({
    'disable_clear_notification_id': None,
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': None,
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_multiple_switches_dismissed][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'entity_id': 'light.kitchen',
        'override': 'lampie.override',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config_override': None,
    'notification_on': True,
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': None,
        'effect': <Effect.OPEN_CLOSE: 6>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': 'doors_open',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_5m1s_duration_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'entity_id': 'light.kitchen',
        'override': 'lampie.override',
      }),
      'event_type': 'lampie.dismissed',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config_override': None,
    'notification_on': True,
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': None,
        'effect': <Effect.OPEN_CLOSE: 6>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': 'doors_open',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_dismissed][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config_override': None,
    'notification_on': True,
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': None,
        'effect': <Effect.OPEN_CLOSE: 6>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': 'doors_open',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_on,kitchen_override_leds_reset][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'notification': 'doors_open',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[doors_open_various_firmware_durations_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 30,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 65,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 122,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 30,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 122,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 65,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 30,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[entryway_no_override_dismissed][swtich_info:light.entryway]
  None
# ---
# name: test_toggle_notifications[entryway_override][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[entryway_override][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[entryway_override][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[entryway_override][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[entryway_override][swtich_info:light.entryway]
  dict({
    'disable_clear_notification_id': 'switch.entryway_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.GREEN: 90>,
        'duration': None,
        'effect': <Effect.SOLID: 1>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.SERVICE: 'service'>,
      'value': 'lampie.override',
    }),
    'local_protection_id': 'switch.entryway_local_protection',
    'priorities': tuple(
    ),
  })
# ---
# name: test_toggle_notifications[entryway_override][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[entryway_override_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'entity_id': 'light.entryway',
        'override': 'lampie.override',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[entryway_override_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[entryway_override_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][swtich_info:light.entryway]
  dict({
    'disable_clear_notification_id': 'switch.entryway_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.entryway_local_protection',
    'priorities': tuple(
    ),
  })
# ---
# name: test_toggle_notifications[entryway_override_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config_override': None,
    'notification_on': True,
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'green',
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solid',
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'lampie.override',
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.GREEN: 90>,
        'duration': None,
        'effect': <Effect.SOLID: 1>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.SERVICE: 'service'>,
      'value': 'lampie.override',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override,doors_open_on][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'entity_id': 'light.kitchen',
        'override': 'lampie.override',
      }),
      'event_type': 'lampie.dismissed',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_dismissed][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'entity_id': 'light.kitchen',
        'override': 'lampie.override',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'green',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'expires_at': '2025-05-20T03:56:33.003245-07:00',
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'started_at': '2025-05-20T03:51:32.003245-07:00',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '301.0',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solid',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'lampie.override',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': <ANY>,
      'expires_at': HAFakeDatetime(2025, 5, 20, 3, 56, 33, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.GREEN: 90>,
        'duration': 301.0,
        'effect': <Effect.SOLID: 1>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.SERVICE: 'service'>,
      'value': 'lampie.override',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_5m1s_duration_unexpired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'blue',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'clear',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'lampie.override',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.BLUE: 170>,
        'duration': None,
        'effect': <Effect.CLEAR: 255>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.SERVICE: 'service'>,
      'value': 'lampie.override',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_clear][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'entity_id': 'light.kitchen',
        'override': 'lampie.override',
      }),
      'event_type': 'lampie.dismissed',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_dismissed][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][events]
  list([
    EventSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'entity_id': 'light.kitchen',
        'override': 'lampie.override',
      }),
      'event_type': 'lampie.expired',
      'id': <ANY>,
      'origin': 'LOCAL',
      'time_fired': <ANY>,
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'individual': list([
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
      'individual': list([
        'red',
        'blue',
        'white',
        'red',
        'blue',
        'white',
        0,
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'expires_at': '2025-05-20T04:01:33.003245-07:00',
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'individual': list([
        601.0,
        0,
        601.0,
        601.0,
        0,
        601.0,
        601.0,
      ]),
      'started_at': '2025-05-20T03:51:32.003245-07:00',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '601.0',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
      'individual': list([
        'solid',
        'clear',
        'solid',
        'solid',
        'clear',
        'solid',
        'solid',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'lampie.override',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': <ANY>,
      'expires_at': HAFakeDatetime(2025, 5, 20, 4, 1, 33, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': 601.0,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.BLUE: 170>,
        'duration': 0,
        'effect': <Effect.CLEAR: 255>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.WHITE: 255>,
        'duration': 601.0,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.RED: 0>,
        'duration': 601.0,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.BLUE: 170>,
        'duration': 0,
        'effect': <Effect.CLEAR: 255>,
      }),
      dict({
        'brightness': 100.0,
        'color': <Color.WHITE: 255>,
        'duration': 601.0,
        'effect': <Effect.SOLID: 1>,
      }),
      dict({
        'brightness': 100.0,
        'color': 0,
        'duration': 601.0,
        'effect': <Effect.SOLID: 1>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.SERVICE: 'service'>,
      'value': 'lampie.override',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_mixed_specific_durations_partially_expired][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'green',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solid',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'customized_name',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
      dict({
        'brightness': 100.0,
        'color': <Color.GREEN: 90>,
        'duration': None,
        'effect': <Effect.SOLID: 1>,
      }),
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.SERVICE: 'service'>,
      'value': 'customized_name',
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_named][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][notification_info]
  dict({
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': None,
    }),
    'led_config_override': None,
    'notification_on': False,
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][service_calls]
  list([
  ])
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][switch_info]
  dict({
    'disable_clear_notification_id': 'switch.kitchen_disable_config_2x_tap_to_clear_notifications',
    'expiration': ExpirationInfoSnapshot({
      'cancel_listener': None,
      'expires_at': None,
      'started_at': HAFakeDatetime(2025, 5, 20, 3, 51, 32, 3245, tzinfo=zoneinfo.ZoneInfo(key='US/Pacific')),
    }),
    'led_config': tuple(
    ),
    'led_config_source': dict({
      'type': <LEDConfigSourceType.NOTIFICATION: 'notification'>,
      'value': None,
    }),
    'local_protection_id': 'switch.kitchen_local_protection',
    'priorities': tuple(
      'doors_open',
    ),
  })
# ---
# name: test_toggle_notifications[kitchen_override_leds_reset][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.entryway_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.entryway_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.entryway_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.entryway_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.entryway_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cyan',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'slow_blink',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'medicine',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][switch.medicine_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Medicine Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.medicine_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 130,
          'led_duration': 255,
          'led_effect': 3,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.entryway_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.entryway_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.entryway_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.entryway_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.entryway_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cyan',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'slow_blink',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'medicine',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][switch.medicine_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Medicine Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.medicine_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 130,
          'led_duration': 255,
          'led_effect': 3,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.entryway_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.entryway_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.entryway_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.entryway_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.entryway_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'individual': list([
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
      'individual': list([
        'red',
        'orange',
        'white',
        'red',
        'orange',
        'white',
        0,
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'individual': list([
        None,
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
      'individual': list([
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solid',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'medicine',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][switch.medicine_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Medicine Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.medicine_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_doors_open_off_custom_medicine_leds][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 255,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 255,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.entryway_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.entryway_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.entryway_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.entryway_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.entryway_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][switch.medicine_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Medicine Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.medicine_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[both_on_then_medicine_off][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 130,
          'led_duration': 255,
          'led_effect': 3,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.entryway_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.entryway_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.entryway_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.entryway_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.entryway_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][switch.medicine_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Medicine Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.medicine_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.dining_room_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dining room Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dining_room_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.dining_room_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dining room Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dining_room_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.dining_room_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dining room Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dining_room_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.dining_room_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dining room Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dining_room_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.dining_room_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Dining room Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.dining_room_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.entryway_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.entryway_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.entryway_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.entryway_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.entryway_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][switch.medicine_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Medicine Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.medicine_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[doors_open_on_with_third_switch][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:entryway',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:dining_room',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.entryway_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.entryway_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.entryway_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.entryway_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.entryway_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Entryway Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.entryway_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'cyan',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'slow_blink',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'medicine',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][switch.medicine_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Medicine Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.medicine_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_toggle_notifications_with_shared_switches[medicine_on][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 130,
          'led_duration': 255,
          'led_effect': 3,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
