# serializer version: 1
# name: test_activate_service[full_led_config][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'individual': list([
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_activate_service[full_led_config][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
      'individual': list([
        'green',
        'orange',
        'blue',
        'yellow',
        'pink',
        'red',
        'cyan',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_activate_service[full_led_config][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'individual': list([
        None,
        None,
        None,
        None,
        None,
        None,
        None,
      ]),
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_activate_service[full_led_config][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
      'individual': list([
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
        'solid',
        'fast_blink',
      ]),
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'multi',
  })
# ---
# name: test_activate_service[full_led_config][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open[custom]',
  })
# ---
# name: test_activate_service[full_led_config][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_activate_service[full_led_config][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 45,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 230,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 130,
          'led_duration': 255,
          'led_effect': 2,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_activate_service[led_color][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_activate_service[led_color][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'green',
  })
# ---
# name: test_activate_service[led_color][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_activate_service[led_color][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'solid',
  })
# ---
# name: test_activate_service[led_color][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open[custom]',
  })
# ---
# name: test_activate_service[led_color][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_activate_service[led_color][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_activate_service[notification_only][sensor.kitchen_effect_brightness]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect brightness',
      'icon': 'mdi:brightness-percent',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_brightness',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '100.0',
  })
# ---
# name: test_activate_service[notification_only][sensor.kitchen_effect_color]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect color',
      'icon': 'mdi:palette',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_color',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'red',
  })
# ---
# name: test_activate_service[notification_only][sensor.kitchen_effect_duration]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect duration',
      'icon': 'mdi:timer',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.SECONDS: 's'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_duration',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_activate_service[notification_only][sensor.kitchen_effect_type]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Effect type',
      'icon': 'mdi:star-four-points-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_effect_type',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'open_close',
  })
# ---
# name: test_activate_service[notification_only][sensor.kitchen_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Kitchen Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.kitchen_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'doors_open',
  })
# ---
# name: test_activate_service[notification_only][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
# name: test_activate_service[notification_only][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 6,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_override_service[full_led_config][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_override_service[full_led_config][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 0,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 25,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 1,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 170,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 2,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 45,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 3,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 230,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 4,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 0,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
          'led_number': 5,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 3,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 130,
          'led_duration': 255,
          'led_effect': 2,
          'led_level': 100,
          'led_number': 6,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
# name: test_override_service[led_color][switch.doors_open_notification]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Doors Open Notification',
      'icon': 'mdi:circle-box',
    }),
    'context': <ANY>,
    'entity_id': 'switch.doors_open_notification',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_override_service[led_color][zha_cluster_commands]
  list([
    ServiceCallSnapshot({
      'context': <ANY>,
      'data': ReadOnlyDict({
        'cluster_id': 64561,
        'cluster_type': 'in',
        'command': 1,
        'command_type': 'server',
        'endpoint_id': 1,
        'ieee': 'mock-ieee:kitchen',
        'manufacturer': 4655,
        'params': dict({
          'led_color': 90,
          'led_duration': 255,
          'led_effect': 1,
          'led_level': 100,
        }),
      }),
      'domain': 'zha',
      'hass': <ANY>,
      'return_response': False,
      'service': 'issue_zigbee_cluster_command',
    }),
  ])
# ---
